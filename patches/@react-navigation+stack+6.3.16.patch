diff --git a/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx b/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx
index 6bbce10..5139382 100644
--- a/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx
+++ b/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx
@@ -375,29 +375,48 @@ export default class StackView extends React.Component<Props, State> {
 
   private handleTransitionStart = (
     { route }: { route: Route<string> },
-    closing: boolean
-  ) =>
+    closing: boolean,
+  ) => {
     this.props.navigation.emit({
       type: 'transitionStart',
       data: { closing },
       target: route.key,
     });
+  }
 
   private handleTransitionEnd = (
     { route }: { route: Route<string> },
-    closing: boolean
-  ) =>
+    closing: boolean,
+    state: StackNavigationState<ParamListBase>
+  ) => {
     this.props.navigation.emit({
       type: 'transitionEnd',
       data: { closing },
       target: route.key,
     });
+    if (state?.index > 1) {
+      this.props.navigation.emit({
+        type: 'transitionEnd',
+        data: { closing: !closing },
+        target: state.routes[state.index - 2].key,
+      });
+    }
+  }
 
-  private handleGestureStart = ({ route }: { route: Route<string> }) => {
+  private handleGestureStart = (
+      { route }: { route: Route<string> },
+      state: StackNavigationState<ParamListBase>
+    ) => {
     this.props.navigation.emit({
       type: 'gestureStart',
       target: route.key,
     });
+    if (state?.index > 1) {
+      this.props.navigation.emit({
+        type: 'gestureStart',
+        target: state.routes[state.index - 2].key,
+      });
+    }
   };
 
   private handleGestureEnd = ({ route }: { route: Route<string> }) => {
